{
  "$schema": "http://json.schemastore.org/template",
  "author": "NETWORG",
  "identity": "NETWORG.Template.pp-test-ui-step",
  "name": "TALXIS TestKit Template",
  "shortName": "pp-test-ui-step",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sourceName": "TALXISTestingUiSolution",
  "sources": [
    {
      "modifiers": [
      {
        "condition": "(!createAppsetingsFile)",
        "exclude": [
          "pp-test-ui-step/appsettings.json"
        ]
      }
    ],
      "exclude": [
        "**/.git/**",
        "**/.gitignore",
        "**/.vs/**",
        "**/.vs",
        ".vs/**",
        ".vs",
        "**/[Oo]bj/**",
        "*/**/[Bb]in/**",
        "*/**/[Oo]bj/**",
        "**/**/[Bb]in/**",
        "**/**/[Oo]bj/**",
        ".template.config/**/*"
      ]
    }
  ],
  "preferNameDirectory": true,
    "symbols": {
    "createAppsetingsFile": {
        "type": "parameter",
        "datatype": "bool",
        "defaultValue": "false",
        "description": "Create appsetings.json"
    },
    "enableUserSecrets": {
        "type": "parameter",
        "datatype": "bool",
        "defaultValue": "false",
        "description": "Enable User Secrets"
    },
      "testExecutionFramework": {
          "type": "parameter",
          "description": "Test Execution Framework",
          "datatype": "choice",
          "defaultValue": "mstest",
          "choices": [
              {
                  "choice": "xunit",
                  "description": "xUnit"
              },
              {
                  "choice": "nunit",
                  "description": "NUnit"
              },
              {
                  "choice": "mstest",
                  "description": "MSTest"
              }
          ]
      },
      "includeFluentAssertions": {
          "type": "parameter",
          "datatype": "bool",
          "description": "Add FluentAssertions library",
          "defaultValue": "true"
      },
      "ReqnrollNugetPackages": {
          "type": "generated",
          "generator": "switch",
          "replaces": "$ReqnrollNugetPackages$",
          "parameters": {
              "evaluator": "C++",
              "datatype": "string",
              "cases": [
                  {
                      "condition": "(testExecutionFramework == 'xunit')",
                      "value": "<PackageReference Include=\"Reqnroll.xUnit\" Version=\"2.*\" />"
                  },
                  {
                      "condition": "(testExecutionFramework == 'mstest')",
                      "value": "<PackageReference Include=\"Reqnroll.MsTest\" Version=\"2.*\" />"
                  },
                  {
                      "condition": "(testExecutionFramework == 'nunit')",
                      "value": "<PackageReference Include=\"Reqnroll.NUnit\" Version=\"2.*\" />"
                  }
              ]
          }
      },
      "TestFrameworkUsings": {
          "type": "generated",
          "generator": "switch",
          "replaces": "$TestFrameworkUsings$",
          "parameters": {
              "evaluator": "C++",
              "datatype": "string",
              "cases": [
                  {
                      "condition": "(testExecutionFramework == 'xunit')",
                      "value": "global using Microsoft.VisualStudio.TestTools.UnitTesting;"
                  },
                  {
                      "condition": "(testExecutionFramework == 'mstest')",
                      "value": "global using Microsoft.VisualStudio.TestTools.UnitTesting;"
                  },
                  {
                      "condition": "(testExecutionFramework == 'nunit')",
                      "value": "global using NUnit;"
                  }
              ]
          }
      },
      "AdditionalNugetPackages": {
          "type": "generated",
          "generator": "switch",
          "replaces": "$additionalNugetPackages$",
          "parameters": {
              "evaluator": "C++",
              "datatype": "string",
              "cases": [
                  {
                      "condition": "(testExecutionFramework == 'xunit')",
                      "value": "<PackageReference Include=\"xunit\" Version=\"2.*\" />\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.*\">\n    <PrivateAssets>all</PrivateAssets>\n        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>"
                  },
                  {
                      "condition": "(testExecutionFramework == 'mstest')",
                      "value": "<PackageReference Include=\"MSTest.TestFramework\" Version=\"3.*\" />\n    <PackageReference Include=\"MSTest.TestAdapter\" Version=\"3.*\" />"
                  },
                  {
                      "condition": "(testExecutionFramework == 'nunit')",
                      "value": "<PackageReference Include=\"nunit\" Version=\"4.*\" />\n    <PackageReference Include=\"NUnit3TestAdapter\" Version=\"4.*\" />"
                  }
              ]
          }
      },
      "FluentAssertionsNugetPackage": {
          "type": "generated",
          "generator": "switch",
          "replaces": "$fluentAssertionsNugetPackage$",
          "parameters": {
              "evaluator": "C++",
              "datatype": "string",
              "cases": [
                  {
                      "condition": "(includeFluentAssertions)",
                      "value": "<PackageReference Include=\"FluentAssertions\" Version=\"6.12.0\" />"
                  }
              ]
          }
      }
  },
  "postActions": [
    {
      "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
      "condition": "enableUserSecrets == true",
      "args": {
        "executable": "powershell",
        "args": "-NoProfile -ExecutionPolicy Bypass -File \".template.scripts\\EnableUserSecrets.ps1\""
    },
      "manualInstructions": [
        {
          "text": "If the script does not start automatically, run the command: dotnet user-secrets init"
        }
      ]
    },
    {
        "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
        "args": {
          "executable": "pwsh",
          "args": "-noprofile -executionpolicy bypass -File \"./.template.scripts/Cleanup.ps1\""
        },
        "manualInstructions": [
          {
            "text": "Removing template files"
          }
        ],
        "continueOnError": false,
        "description": "Removing template files"
      }
  ]
}